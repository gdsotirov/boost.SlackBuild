#!/bin/sh
#
# SlackBuild for Boost
# Written by Georgi D. Sotirov <gdsotirov@dir.bg>
# Based on the Slackware Build script by Eric Hameleers <alien@slackware.com>
#

. ../slack-package.conf

NAME=boost
VERSION=1.41.0
VERSTR=${VERSION//./_}
BUILD=1

TMP=${TMP:-/tmp}
CWD=${CWD:-`pwd`}
PKG_DIR=${PKG_DIR:-/tmp}

if [ ! -e $TMP ]; then
  mkdir -p $TMP # location to build the source
fi

SRC=$TMP/${NAME}_${VERSTR}
if [ -e $SRC -a -d $SRC ]; then
  echo "Source directory '$SRC' already exists! Plaese, move it or remove it."
  exit 1
fi

PKG=$TMP/package-$NAME
if [ -e $PKG -a -d $PKG ]; then
  echo "Package creation directory '$PKG' already exists! Please, move it or remove it."
  exit 2
fi
mkdir -p $PKG

# Extract the source
cd $TMP
tar -jxvf $CWD/${NAME}_${VERSTR}.tar.bz2
cd $SRC
fix_source

# Apply version specific patches (hot fixes)
# see http://svn.boost.org/trac/boost/wiki/ReleasePractices/HotFixes
# - no hotfixes for 1.37 yet

# This is the python we build against:
PYTHON_VERSION=$(python -c 'import sys; print sys.version[:3]')

# Bbuild bjam first
( cd tools/jam/src
  CFLAGS="$SLKCFLAGS -fno-strict-aliasing" CC=gcc ./build.sh cc )

BJAM=$SRC/tools/jam/src/bin.linuxx86/bjam

# Seems this is the only way to configure
#echo -e "\nusing mpi ;" >> tools/build/v2/user-config.jam
sed -i "s/<threading>multi/<threading>multi <optimization>speed <inlining>full/" Jamroot
sed -i "s/<link>shared <link>static/<link>shared/" Jamroot

if [ ! -e $BJAM ]; then
  echo "Aborting. Can't use bjam executable in '$BJAM'"
  exit 1
fi

# Build
mkdir obj

$BJAM cxxflags="$SLKCFLAGS" \
  release \
  -sHAVE_ICU=1 \
  -sPYTHON_ROOT=/usr -sPYTHON_VERSION=$PYTHON_VERSION \
  -sZLIB_INCLUDE=/usr/include -sZLIB_LIBPATH=/usr/lib \
  -sBZIP2_INCLUDE=/usr/include -sBZIP2_LIBPATH=/usr/lib \
  -sEXPAT_INCLUDE=/usr/include -sEXPAT_LIBPATH=/usr/lib \
  --toolset=gcc \
  --layout=system \
  --builddir=obj \
  --prefix=/usr \
  --with-mpi \
  stage || exit $?

# Build bcp
( cd $SRC/tools/bcp
  $BJAM release ) || exit $?

# Install
$BJAM \
  release \
  -sPYTHON_ROOT=/usr -sPYTHON_VERSION=$PYTHON_VERSION \
  --toolset=gcc \
  --layout=system \
  --builddir=obj \
  --prefix=$PKG/usr \
  install || exit $?

# Install binaries
install -m 755 -d $PKG/usr/bin
install -m 755 $SRC/dist/bin/bcp $PKG/usr/bin/bcp
install -m 755 $BJAM $PKG/usr/bin/bjam
install -m 755 $SRC/libs/python/pyste/install/pyste.py $PKG/usr/bin/pyste.py

# Prepare package
bin_perms $PKG
( cd $PKG; strip_bin; strip_lib )
DOCFILES="$DOCFILES LICENSE_1_0.txt people wiki"
( cd $SRC; create_docs $PKG $NAME-$VERSION )
( cd $PKG/usr/doc/$NAME-$VERSION; cp LICENSE_1_0.txt COPYING )

mkdir -p $PKG/install
install -m 644 $CWD/slack-desc     $PKG/install/slack-desc
install -m 644 $CWD/slack-required $PKG/install/slack-required

mkdir -p $PKG/usr/src/slackbuilds/$NAME-$VERSION
install -m 644 $CWD/slack-desc       $PKG/usr/src/slackbuilds/$NAME-$VERSION/slack-desc
install -m 644 $CWD/slack-required   $PKG/usr/src/slackbuilds/$NAME-$VERSION/slack-required
install -m 644 $CWD/$NAME.SlackBuild $PKG/usr/src/slackbuilds/$NAME-$VERSION/$NAME.SlackBuild

cd $PKG
PKGNAME=$NAME-$VERSION-$ARCH-$BUILD$MYIN
makepkg -l y -c n $PKG_DIR/$PKGNAME.txz
cd $PKG_DIR
md5sum $PKGNAME.txz > $PKGNAME.txz.md5
cat $PKG/install/slack-desc > $PKG_DIR/$PKGNAME.txt

if [ "$1" == "--cleanup" ]; then
  rm -r $SRC
  rm -r $PKG
fi

